{"ast":null,"code":"var _jsxFileName = \"/Users/dorabelme/Documents/UDEMY/COOL PROJECTS/Card-Dealer/card_dealer/src/Deck.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport \"./Deck.css\";\nimport axios from \"axios\";\nconst API_BASE_URL = \"https://www.deckofcardsapi.com/api/deck\";\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: null,\n      drawn: []\n    };\n    this.getCard = this.getCard.bind(this);\n  }\n\n  async componentDidMount() {\n    let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\n    this.setState({\n      deck: deck.data\n    });\n  }\n\n  async getCard() {\n    let deck_id = this.state.deck.deck_id;\n\n    try {\n      let cardUrl = `${API_BASE_URL}/${deck_id}/draw/`;\n      let cardRes = await axios.get(cardUrl);\n\n      if (!cardRes.data.success) {\n        throw new Error(\"No card remaining!\");\n      }\n\n      let card = cardRes.data.cards[0];\n      console.log(cardRes.data);\n      this.setState(st => ({\n        drawn: [...st.drawn, {\n          id: card.code,\n          image: card.image,\n          name: `${card.value} of ${card.suit}`\n        }]\n      }));\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  render() {\n    const cards = this.state.drawn.map(c => /*#__PURE__*/React.createElement(Card, {\n      key: c.id,\n      name: c.name,\n      image: c.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Deck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"Deck-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"\\u2666 Card Dealer \\u2666\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"Deck-title subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"\\u2666 A little demo made with React \\u2666\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Deck-btn\",\n      onClick: this.getCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Get Card!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Deck-cardarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, cards));\n  }\n\n}\n\nexport default Deck;","map":{"version":3,"sources":["/Users/dorabelme/Documents/UDEMY/COOL PROJECTS/Card-Dealer/card_dealer/src/Deck.js"],"names":["React","Component","Card","axios","API_BASE_URL","Deck","constructor","props","state","deck","drawn","getCard","bind","componentDidMount","get","setState","data","deck_id","cardUrl","cardRes","success","Error","card","cards","console","log","st","id","code","image","name","value","suit","err","alert","render","map","c"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport \"./Deck.css\";\nimport axios from \"axios\";\nconst API_BASE_URL = \"https://www.deckofcardsapi.com/api/deck\";\n\nclass Deck extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { deck: null, drawn: [] };\n        this.getCard = this.getCard.bind(this);\n    }\n    async componentDidMount() {\n        let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\n        this.setState({ deck: deck.data });\n    }\n    async getCard() {\n        let deck_id = this.state.deck.deck_id;\n        try {\n            let cardUrl = `${API_BASE_URL}/${deck_id}/draw/`;\n            let cardRes = await axios.get(cardUrl);\n            if (!cardRes.data.success) {\n                throw new Error(\"No card remaining!\");\n            }\n            let card = cardRes.data.cards[0];\n            console.log(cardRes.data);\n            this.setState(st => ({\n                drawn: [\n                    ...st.drawn,\n                    {\n                        id: card.code,\n                        image: card.image,\n                        name: `${card.value} of ${card.suit}`\n                    }\n                ]\n            }));\n        } catch (err) {\n            alert(err);\n        }\n    }\n\n    render() {\n        const cards = this.state.drawn.map(c => (\n            <Card key={c.id} name={c.name} image={c.image} />\n        ));\n        return (\n            <div className='Deck'>\n                <h1 className='Deck-title'>♦ Card Dealer ♦</h1>\n                <h2 className='Deck-title subtitle'>\n                    ♦ A little demo made with React ♦\n        </h2>\n                <button className='Deck-btn' onClick={this.getCard}>\n                    Get Card!\n        </button>\n                <div className='Deck-cardarea'>{cards}</div>\n            </div>\n        );\n    }\n}\nexport default Deck;"]},"metadata":{},"sourceType":"module"}